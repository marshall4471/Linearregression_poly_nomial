# -*- coding: utf-8 -*-
"""medical_costs_regression_polynamial_degree.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10mkz_qIL24d8HmWgYzGq09gVfZ4vhNS5
"""

import pandas as pd

!unzip med.zip

import matplotlib.pyplot as plt

from sklearn.model_selection import train_test_split

import pandas as pd

df = pd.read_csv ('/content/insurance.csv')

df.head()

df

df.fillna(0, inplace=True)

from sklearn.preprocessing import OneHotEncoder, LabelEncoder
from sklearn.impute import SimpleImputer
from sklearn.preprocessing import StandardScaler
le =  LabelEncoder()
for i in df:
    if df[i].dtype=='object':
        df[i] = le.fit_transform(df[i].astype(str))
    else:
        continue

x = df.drop(['charges'],axis=1)

df.head()

y = df['charges'].values

import seaborn as sns
sns.set_style('whitegrid')
sns.lmplot(x ='bmi', y ='charges', data = df)

import matplotlib.pyplot as plt
plt.figure(figsize=(20,8))
plt.plot(x)
plt.title('features')

import matplotlib.pyplot as plt
plt.figure(figsize=(20,8))
plt.plot(y)
plt.title('charges')

import numpy as np

df.fillna(0)

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(x,y, test_size = 0.20, random_state= 1)

from sklearn.preprocessing import PolynomialFeatures





from sklearn.linear_model import LinearRegression

poly = PolynomialFeatures(degree=9, include_bias=False)

x_train_trans = poly.fit_transform(X_train)
x_test_trans = poly.transform(X_test)

new_model = LinearRegression()

new_model.fit(x_train_trans, y_train)

from sklearn.metrics import r2_score

y_pred = new_model.predict(x_test_trans)

plt.plot( y_pred)
plt.legend(['Predicted Line'])
plt.show()

r2_score(y_pred, y_test)





